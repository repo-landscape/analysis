create table entities (id text, type text, data jsonb) partition by list (type);
create table communities_infrastructures partition of entities for values in ('communities_infrastructures');
create table datasets partition of entities for values in ('dataset');
create table datasources partition of entities for values in ('datasource');
create table organizations partition of entities for values in ('organization');
create table other_research_products partition of entities for values in ('other_research_product');
create table projects partition of entities for values in ('project');
create table publications partition of entities for values in ('publication');
create table software partition of entities for values in ('software');

create table relations (sourceid text not null, targetid text not null, reltype text not null) partition by list(reltype);
create table relations_default partition of relations default;
create table relations_Cites partition of relations for values in ('Cites');
create table relations_Compiles partition of relations for values in ('Compiles');
create table relations_Continues partition of relations for values in ('Continues');
create table relations_Describes partition of relations for values in ('Describes');
create table relations_Documents partition of relations for values in ('Documents');
create table relations_HasAmongTopNSimilarDocuments partition of relations for values in ('HasAmongTopNSimilarDocuments');
create table relations_hasAuthorInstitution partition of relations for values in ('hasAuthorInstitution');
create table relations_HasPart partition of relations for values in ('HasPart');
create table relations_hasParticipant partition of relations for values in ('hasParticipant');
create table relations_HasVersion partition of relations for values in ('HasVersion');
create table relations_hosts partition of relations for values in ('hosts');
create table relations_IsAmongTopNSimilarDocuments partition of relations for values in ('IsAmongTopNSimilarDocuments');
create table relations_isAuthorInstitutionOf partition of relations for values in ('isAuthorInstitutionOf');
create table relations_IsChildOf partition of relations for values in ('IsChildOf');
create table relations_IsCitedBy partition of relations for values in ('IsCitedBy');
create table relations_IsCompiledBy partition of relations for values in ('IsCompiledBy');
create table relations_IsContinuedBy partition of relations for values in ('IsContinuedBy');
create table relations_IsDerivedFrom partition of relations for values in ('IsDerivedFrom');
create table relations_IsDescribedBy partition of relations for values in ('IsDescribedBy');
create table relations_IsDocumentedBy partition of relations for values in ('IsDocumentedBy');
create table relations_isHostedBy partition of relations for values in ('isHostedBy');
create table relations_IsIdenticalTo partition of relations for values in ('IsIdenticalTo');
create table relations_IsNewVersionOf partition of relations for values in ('IsNewVersionOf');
create table relations_IsObsoletedBy partition of relations for values in ('IsObsoletedBy');
create table relations_IsOriginalFormOf partition of relations for values in ('IsOriginalFormOf');
create table relations_IsParentOf partition of relations for values in ('IsParentOf');
create table relations_isParticipant partition of relations for values in ('isParticipant');
create table relations_IsPartOf partition of relations for values in ('IsPartOf');
create table relations_IsPreviousVersionOf partition of relations for values in ('IsPreviousVersionOf');
create table relations_isProducedBy partition of relations for values in ('isProducedBy');
create table relations_isProvidedBy partition of relations for values in ('isProvidedBy');
create table relations_IsReferencedBy partition of relations for values in ('IsReferencedBy');
create table relations_IsRelatedTo partition of relations for values in ('IsRelatedTo');
create table relations_IsRequiredBy partition of relations for values in ('IsRequiredBy');
create table relations_IsReviewedBy partition of relations for values in ('IsReviewedBy');
create table relations_IsSourceOf partition of relations for values in ('IsSourceOf');
create table relations_IsSupplementedBy partition of relations for values in ('IsSupplementedBy');
create table relations_IsSupplementTo partition of relations for values in ('IsSupplementTo');
create table relations_IsVariantFormOf partition of relations for values in ('IsVariantFormOf');
create table relations_IsVersionOf partition of relations for values in ('IsVersionOf');
create table relations_Obsoletes partition of relations for values in ('Obsoletes');
create table relations_produces partition of relations for values in ('produces');
create table relations_provides partition of relations for values in ('provides');
create table relations_References partition of relations for values in ('References');
create table relations_Requires partition of relations for values in ('Requires');
create table relations_Reviews partition of relations for values in ('Reviews');
--create table relations_ partition of relations for values in ('');

-- preferably after data ingestion
create index communities_infrastructures_id_idx on communities_infrastructures using btree(id);
create index datasets_id_idx on datasets using brin(id);
create index datasources_id_idx on datasources using btree(id);
create index organizations_id_idx on organizations using btree(id);
create index other_research_products_id_idx on other_research_products using brin(id);
create index projects_id_idx on projects using btree(id);
create index publications_id_idx on publications using brin(id);
create index software_id_idx on software using btree(id);

create index relations_Cites_sourceid_idx on relations_Cites using brin(sourceid);
create index relations_Compiles_sourceid_idx on relations_Compiles using brin(sourceid);
create index relations_Continues_sourceid_idx on relations_Continues using brin(sourceid);
create index relations_Describes_sourceid_idx on relations_Describes using brin(sourceid);
create index relations_Documents_sourceid_idx on relations_Documents using brin(sourceid);
create index relations_HasAmongTopNSimilarDocuments_sourceid_idx on relations_HasAmongTopNSimilarDocuments using brin(sourceid);
create index relations_hasAuthorInstitution_sourceid_idx on relations_hasAuthorInstitution using brin(sourceid);
create index relations_HasPart_sourceid_idx on relations_HasPart using brin(sourceid);
create index relations_hasParticipant_sourceid_idx on relations_hasParticipant using brin(sourceid);
create index relations_HasVersion_sourceid_idx on relations_HasVersion using brin(sourceid);
create index relations_hosts_sourceid_idx on relations_hosts using brin(sourceid);
create index relations_IsAmongTopNSimilarDocuments_sourceid_idx on relations_IsAmongTopNSimilarDocuments using brin(sourceid);
create index relations_isAuthorInstitutionOf_sourceid_idx on relations_isAuthorInstitutionOf using brin(sourceid);
create index relations_IsChildOf_sourceid_idx on relations_IsChildOf using brin(sourceid);
create index relations_IsCitedBy_sourceid_idx on relations_IsCitedBy using brin(sourceid);
create index relations_IsCompiledBy_sourceid_idx on relations_IsCompiledBy using brin(sourceid);
create index relations_IsContinuedBy_sourceid_idx on relations_IsContinuedBy using brin(sourceid);
create index relations_IsDerivedFrom_sourceid_idx on relations_IsDerivedFrom using brin(sourceid);
create index relations_IsDescribedBy_sourceid_idx on relations_IsDescribedBy using brin(sourceid);
create index relations_IsDocumentedBy_sourceid_idx on relations_IsDocumentedBy using brin(sourceid);
create index relations_isHostedBy_sourceid_idx on relations_isHostedBy using brin(sourceid);
create index relations_IsIdenticalTo_sourceid_idx on relations_IsIdenticalTo using brin(sourceid);
create index relations_IsNewVersionOf_sourceid_idx on relations_IsNewVersionOf using brin(sourceid);
create index relations_IsObsoletedBy_sourceid_idx on relations_IsObsoletedBy using brin(sourceid);
create index relations_IsOriginalFormOf_sourceid_idx on relations_IsOriginalFormOf using brin(sourceid);
create index relations_IsParentOf_sourceid_idx on relations_IsParentOf using brin(sourceid);
create index relations_isParticipant_sourceid_idx on relations_isParticipant using brin(sourceid);
create index relations_IsPartOf_sourceid_idx on relations_IsPartOf using brin(sourceid);
create index relations_IsPreviousVersionOf_sourceid_idx on relations_IsPreviousVersionOf using brin(sourceid);
create index relations_isProducedBy_sourceid_idx on relations_isProducedBy using brin(sourceid);
create index relations_isProvidedBy_sourceid_idx on relations_isProvidedBy using brin(sourceid);
create index relations_IsReferencedBy_sourceid_idx on relations_IsReferencedBy using brin(sourceid);
create index relations_IsRelatedTo_sourceid_idx on relations_IsRelatedTo using brin(sourceid);
create index relations_IsRequiredBy_sourceid_idx on relations_IsRequiredBy using brin(sourceid);
create index relations_IsReviewedBy_sourceid_idx on relations_IsReviewedBy using brin(sourceid);
create index relations_IsSourceOf_sourceid_idx on relations_IsSourceOf using brin(sourceid);
create index relations_IsSupplementedBy_sourceid_idx on relations_IsSupplementedBy using brin(sourceid);
create index relations_IsSupplementTo_sourceid_idx on relations_IsSupplementTo using brin(sourceid);
create index relations_IsVariantFormOf_sourceid_idx on relations_IsVariantFormOf using brin(sourceid);
create index relations_IsVersionOf_sourceid_idx on relations_IsVersionOf using brin(sourceid);
create index relations_Obsoletes_sourceid_idx on relations_Obsoletes using brin(sourceid);
create index relations_produces_sourceid_idx on relations_produces using brin(sourceid);
create index relations_provides_sourceid_idx on relations_provides using brin(sourceid);
create index relations_References_sourceid_idx on relations_References using brin(sourceid);
create index relations_Requires_sourceid_idx on relations_Requires using brin(sourceid);
create index relations_Reviews_sourceid_idx on relations_Reviews using brin(sourceid);
--create index relations__sourceid_idx on relations_ using brin(sourceid);

create index relations_Cites_targetid_idx on relations_Cites using brin(targetid);
create index relations_Compiles_targetid_idx on relations_Compiles using brin(targetid);
create index relations_Continues_targetid_idx on relations_Continues using brin(targetid);
create index relations_Describes_targetid_idx on relations_Describes using brin(targetid);
create index relations_Documents_targetid_idx on relations_Documents using brin(targetid);
create index relations_HasAmongTopNSimilarDocuments_targetid_idx on relations_HasAmongTopNSimilarDocuments using brin(targetid);
create index relations_hasAuthorInstitution_targetid_idx on relations_hasAuthorInstitution using brin(targetid);
create index relations_HasPart_targetid_idx on relations_HasPart using brin(targetid);
create index relations_hasParticipant_targetid_idx on relations_hasParticipant using brin(targetid);
create index relations_HasVersion_targetid_idx on relations_HasVersion using brin(targetid);
create index relations_hosts_targetid_idx on relations_hosts using brin(targetid);
create index relations_IsAmongTopNSimilarDocuments_targetid_idx on relations_IsAmongTopNSimilarDocuments using brin(targetid);
create index relations_isAuthorInstitutionOf_targetid_idx on relations_isAuthorInstitutionOf using brin(targetid);
create index relations_IsChildOf_targetid_idx on relations_IsChildOf using brin(targetid);
create index relations_IsCitedBy_targetid_idx on relations_IsCitedBy using brin(targetid);
create index relations_IsCompiledBy_targetid_idx on relations_IsCompiledBy using brin(targetid);
create index relations_IsContinuedBy_targetid_idx on relations_IsContinuedBy using brin(targetid);
create index relations_IsDerivedFrom_targetid_idx on relations_IsDerivedFrom using brin(targetid);
create index relations_IsDescribedBy_targetid_idx on relations_IsDescribedBy using brin(targetid);
create index relations_IsDocumentedBy_targetid_idx on relations_IsDocumentedBy using brin(targetid);
create index relations_isHostedBy_targetid_idx on relations_isHostedBy using brin(targetid);
create index relations_IsIdenticalTo_targetid_idx on relations_IsIdenticalTo using brin(targetid);
create index relations_IsNewVersionOf_targetid_idx on relations_IsNewVersionOf using brin(targetid);
create index relations_IsObsoletedBy_targetid_idx on relations_IsObsoletedBy using brin(targetid);
create index relations_IsOriginalFormOf_targetid_idx on relations_IsOriginalFormOf using brin(targetid);
create index relations_IsParentOf_targetid_idx on relations_IsParentOf using brin(targetid);
create index relations_isParticipant_targetid_idx on relations_isParticipant using brin(targetid);
create index relations_IsPartOf_targetid_idx on relations_IsPartOf using brin(targetid);
create index relations_IsPreviousVersionOf_targetid_idx on relations_IsPreviousVersionOf using brin(targetid);
create index relations_isProducedBy_targetid_idx on relations_isProducedBy using brin(targetid);
create index relations_isProvidedBy_targetid_idx on relations_isProvidedBy using brin(targetid);
create index relations_IsReferencedBy_targetid_idx on relations_IsReferencedBy using brin(targetid);
create index relations_IsRelatedTo_targetid_idx on relations_IsRelatedTo using brin(targetid);
create index relations_IsRequiredBy_targetid_idx on relations_IsRequiredBy using brin(targetid);
create index relations_IsReviewedBy_targetid_idx on relations_IsReviewedBy using brin(targetid);
create index relations_IsSourceOf_targetid_idx on relations_IsSourceOf using brin(targetid);
create index relations_IsSupplementedBy_targetid_idx on relations_IsSupplementedBy using brin(targetid);
create index relations_IsSupplementTo_targetid_idx on relations_IsSupplementTo using brin(targetid);
create index relations_IsVariantFormOf_targetid_idx on relations_IsVariantFormOf using brin(targetid);
create index relations_IsVersionOf_targetid_idx on relations_IsVersionOf using brin(targetid);
create index relations_Obsoletes_targetid_idx on relations_Obsoletes using brin(targetid);
create index relations_produces_targetid_idx on relations_produces using brin(targetid);
create index relations_provides_targetid_idx on relations_provides using brin(targetid);
create index relations_References_targetid_idx on relations_References using brin(targetid);
create index relations_Requires_targetid_idx on relations_Requires using brin(targetid);
create index relations_Reviews_targetid_idx on relations_Reviews using brin(targetid);
--create index relations__targetid_idx on relations_ using brin(targetid);

